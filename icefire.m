function map = icefire(varargin)
%% Prelims
ip = inputParser;
ip.addOptional('n', size(get(groot,'DefaultFigureColormap'),1));
ip.addParameter('center', 0);
ip.addParameter('clims', [-1 1]);
ip.addParameter('mode', 'trimmed', @(x) ismember(x, {'trimmed', 'complete'}));
ip.addParameter('Parent', get(groot,'CurrentFigure'));

ip.parse(varargin{:});
n = ip.Results.n; 
clims = ip.Results.clims;
mode = ip.Results.mode; autoscaleColors = strcmpi(mode, 'trimmed');
Parent = ip.Results.Parent();


%% Sort out inputs (n, clim, colors)
ipiud = @(fieldname) any(strcmp( ip.UsingDefaults , fieldname ));
if ipiud('n')     && ~isempty(Parent) && isprop(Parent, 'Colormap'); n = height(get(Parent, 'Colormap')); end
if ipiud('clims') && ~isempty(Parent) && isprop(Parent, 'CLim');     clims = get(Parent, 'CLim');         end
clims = clims - ip.Results.center;

values = [...
	0.739362	0.904439	0.857572
	0.728881	0.896391	0.854884
	0.718343	0.888422	0.852160
	0.707739	0.880529	0.849422
	0.697062	0.872713	0.846683
	0.686290	0.864973	0.843987
	0.675437	0.857306	0.841310
	0.664485	0.849711	0.838680
	0.653427	0.842187	0.836115
	0.642318	0.834719	0.833586
	0.631177	0.827294	0.831134
	0.620005	0.819911	0.828767
	0.608794	0.812568	0.826489
	0.597541	0.805265	0.824304
	0.586242	0.797999	0.822216
	0.574895	0.790769	0.820229
	0.563498	0.783572	0.818349
	0.552043	0.776408	0.816576
	0.540525	0.769276	0.814915
	0.528941	0.762172	0.813369
	0.517289	0.755095	0.811942
	0.505557	0.748045	0.810635
	0.493739	0.741019	0.809452
	0.481832	0.734014	0.808397
	0.469826	0.727031	0.807471
	0.457709	0.720066	0.806678
	0.445472	0.713119	0.806020
	0.433186	0.706171	0.805493
	0.421103	0.699170	0.805067
	0.409251	0.692111	0.804732
	0.397669	0.684988	0.804483
	0.386320	0.677811	0.804310
	0.375240	0.670575	0.804208
	0.364426	0.663282	0.804175
	0.353859	0.655937	0.804206
	0.343589	0.648532	0.804300
	0.333555	0.641079	0.804455
	0.323831	0.633566	0.804671
	0.314344	0.626006	0.804948
	0.305162	0.618389	0.805287
	0.296235	0.610723	0.805690
	0.287591	0.603003	0.806161
	0.279239	0.595229	0.806698
	0.271147	0.587405	0.807305
	0.263372	0.579521	0.807991
	0.255887	0.571580	0.808759
	0.248686	0.563583	0.809614
	0.241807	0.555523	0.810551
	0.235263	0.547395	0.811594
	0.229214	0.539185	0.812673
	0.223977	0.530861	0.813714
	0.219771	0.522415	0.814577
	0.216590	0.513843	0.815285
	0.214528	0.505142	0.815773
	0.213728	0.496309	0.815896
	0.214095	0.487349	0.815662
	0.215718	0.478271	0.814876
	0.218429	0.469092	0.813516
	0.222117	0.459832	0.811470
	0.226657	0.450522	0.808602
	0.231760	0.441191	0.804943
	0.237278	0.431877	0.800380
	0.242983	0.422611	0.794933
	0.248651	0.413418	0.788692
	0.254231	0.404331	0.781558
	0.259502	0.395355	0.773768
	0.264474	0.386512	0.765248
	0.269016	0.377796	0.756219
	0.273181	0.369221	0.746605
	0.276904	0.360774	0.736594
	0.280236	0.352442	0.726221
	0.283060	0.344384	0.715007
	0.285359	0.336602	0.703040
	0.287087	0.329122	0.690345
	0.288164	0.322006	0.676841
	0.288627	0.315198	0.662788
	0.288479	0.308691	0.648281
	0.287709	0.302501	0.633313
	0.286403	0.296555	0.618114
	0.284589	0.290822	0.602809
	0.282336	0.285275	0.587429
	0.279670	0.279894	0.572042
	0.276654	0.274654	0.556678
	0.273326	0.269516	0.541454
	0.269739	0.264471	0.526349
	0.265920	0.259497	0.511417
	0.261901	0.254581	0.496688
	0.257715	0.249717	0.482149
	0.253376	0.244905	0.467788
	0.248908	0.240133	0.453638
	0.244337	0.235392	0.439725
	0.239679	0.230677	0.426059
	0.234956	0.225989	0.412630
	0.230181	0.221324	0.399456
	0.225346	0.216708	0.386458
	0.220488	0.212117	0.373726
	0.215620	0.207554	0.361253
	0.210746	0.203027	0.349032
	0.205869	0.198554	0.337017
	0.201018	0.194116	0.325292
	0.196199	0.189724	0.313838
	0.191407	0.185402	0.302608
	0.186677	0.181133	0.291666
	0.182013	0.176950	0.280888
	0.177452	0.172821	0.270442
	0.173007	0.168769	0.260249
	0.168683	0.164799	0.250345
	0.164487	0.160917	0.240754
	0.160432	0.157144	0.231417
	0.156524	0.153482	0.222382
	0.152771	0.149941	0.213684
	0.149183	0.146534	0.205295
	0.145771	0.143274	0.197208
	0.142544	0.140169	0.189443
	0.139510	0.137231	0.182011
	0.136678	0.134466	0.174938
	0.134058	0.131888	0.168208
	0.131658	0.129507	0.161833
	0.129487	0.127332	0.155806
	0.127554	0.125372	0.150141
	0.125865	0.123636	0.144846
	0.124426	0.122131	0.139926
	0.123242	0.120864	0.135400
	0.122321	0.119843	0.131246
	0.121662	0.119071	0.127497
	0.121270	0.118553	0.124151
	0.121142	0.118292	0.121238
	0.121278	0.118288	0.118785
	0.122848	0.117973	0.117720
	0.126195	0.117218	0.117702
	0.129968	0.116638	0.117924
	0.134100	0.116251	0.118391
	0.138555	0.116066	0.119106
	0.143338	0.116070	0.120061
	0.148417	0.116269	0.121255
	0.153774	0.116662	0.122684
	0.159414	0.117235	0.124339
	0.165334	0.117979	0.126213
	0.171525	0.118884	0.128297
	0.177978	0.119944	0.130584
	0.184688	0.121147	0.133064
	0.191657	0.122477	0.135726
	0.198844	0.123944	0.138567
	0.206272	0.125519	0.141571
	0.213949	0.127181	0.144726
	0.221846	0.128931	0.148026
	0.229944	0.130767	0.151463
	0.238239	0.132676	0.155028
	0.246760	0.134622	0.158703
	0.255465	0.136618	0.162487
	0.264336	0.138660	0.166373
	0.273413	0.140704	0.170342
	0.282648	0.142772	0.174396
	0.292023	0.144862	0.178528
	0.301596	0.146912	0.182717
	0.311290	0.148976	0.186952
	0.321116	0.151034	0.191196
	0.331080	0.153067	0.195438
	0.341199	0.155048	0.199680
	0.351424	0.157011	0.203891
	0.361789	0.158912	0.208076
	0.372294	0.160740	0.212232
	0.382883	0.162540	0.216325
	0.393596	0.164263	0.220366
	0.404443	0.165888	0.224340
	0.415380	0.167453	0.228230
	0.426409	0.168949	0.232028
	0.437547	0.170348	0.235729
	0.448786	0.171653	0.239323
	0.460113	0.172874	0.242786
	0.471517	0.174016	0.246103
	0.483007	0.175067	0.249274
	0.494583	0.176019	0.252277
	0.506239	0.176878	0.255096
	0.517962	0.177655	0.257716
	0.529752	0.178352	0.260113
	0.541598	0.178983	0.262268
	0.553488	0.179562	0.264160
	0.565417	0.180102	0.265760
	0.577367	0.180631	0.267049
	0.589321	0.181178	0.268004
	0.601276	0.181759	0.268585
	0.613196	0.182434	0.268787
	0.625064	0.183240	0.268583
	0.636812	0.184302	0.267953
	0.648426	0.185655	0.266895
	0.659882	0.187346	0.265434
	0.671120	0.189489	0.263580
	0.682092	0.192166	0.261372
	0.692812	0.195353	0.258871
	0.703350	0.198913	0.256180
	0.713752	0.202764	0.253314
	0.724014	0.206913	0.250274
	0.734076	0.211451	0.247107
	0.743970	0.216319	0.243807
	0.753615	0.221637	0.240440
	0.763058	0.227316	0.237001
	0.772222	0.233462	0.233566
	0.781154	0.239984	0.230138
	0.789797	0.246949	0.226788
	0.798193	0.254272	0.223527
	0.806304	0.261988	0.220409
	0.814174	0.270014	0.217446
	0.821774	0.278373	0.214683
	0.829160	0.286970	0.212108
	0.836286	0.295850	0.209778
	0.843222	0.304911	0.207664
	0.849955	0.314159	0.205786
	0.856489	0.323581	0.204153
	0.862862	0.333121	0.202750
	0.869083	0.342767	0.201573
	0.875129	0.352542	0.200649
	0.881003	0.362434	0.199991
	0.886647	0.372495	0.199798
	0.892040	0.382735	0.200134
	0.897135	0.393182	0.201215
	0.901951	0.403807	0.203016
	0.906484	0.414602	0.205588
	0.910697	0.425579	0.209185
	0.914638	0.436686	0.213680
	0.918307	0.447909	0.219164
	0.921715	0.459229	0.225680
	0.924918	0.470594	0.233082
	0.927908	0.482002	0.241459
	0.930737	0.493412	0.250655
	0.933439	0.504802	0.260561
	0.936021	0.516165	0.271185
	0.938505	0.527489	0.282425
	0.940929	0.538755	0.294160
	0.943300	0.549963	0.306342
	0.945632	0.561110	0.318916
	0.947930	0.572198	0.331843
	0.950209	0.583223	0.345084
	0.952473	0.594190	0.358599
	0.954717	0.605109	0.372360
	0.956984	0.615958	0.386296
	0.959239	0.626765	0.400433
	0.961504	0.637520	0.414741
	0.963716	0.648266	0.429283
	0.965915	0.658996	0.443804
	0.968099	0.669717	0.458302
	0.970249	0.680439	0.472805
	0.972388	0.691156	0.487293
	0.974507	0.701874	0.501780
	0.976611	0.712592	0.516268
	0.978717	0.723305	0.530741
	0.980822	0.734018	0.545207
	0.982900	0.744744	0.559702
	0.984975	0.755476	0.574202
	0.987056	0.766211	0.588702
	0.989133	0.776956	0.603216
	0.991199	0.787717	0.617758
	0.993267	0.798490	0.632317
	0.995360	0.809267	0.646873
	0.997405	0.820081	0.661506
	0.999220	0.831007	0.676413

    ];
m = ceil(size(values,1)/2);


%% Calculations
if (clims(1) < 0) && (clims(2) > 0)

    r = abs(clims(1)) / clims(2); % Ratio of neg to pos
    neglen = round( n*r/(r+1) ) + (r<1); % favour the smaller half
    poslen = n - neglen + 1;

    % Just negative
    neglim = clims(1) - (autoscaleColors && r < 1)*sum(clims); % clims(1) or -clims(2)
    negmap = interp1( linspace( neglim,0,m), values( 1:m           , : ), linspace(clims(1),0,neglen) );

    % Just positive
    poslim = clims(2) - (autoscaleColors && r > 1)*sum(clims); % clims(2) or -clims(1)
    posmap = interp1( linspace( 0,poslim,m), values( (end-m+1):end , : ), linspace(0,clims(2),poslen) );

    % And put 'em together
    map = [negmap; posmap(2:end,:)];

else
    if clims(1) >= 0; map = values( (end-m+1):end , : ); % Just positive
    else; map = values(1:m,:); end % Just negative
    map = interp1(linspace(0, 1, m), map, linspace(0, 1, n));
end

map = min(max(map, 0), 1);


end
